name: CI

on:
  push:
    branches: [staging, production]
  workflow_dispatch:

jobs:
  flake8:
    name: Check Flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  deployment:
    name: Start server
    needs: flake8
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name}}
    steps:
      - name: deploy docker to docker hub
        run: docker login 
      - name: executing ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST}}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd titanic
            sudo docker-compose down
            cd ..
            sudo rm -rf titanic
            git clone -b ${{github.ref_name}} https://github.com/abajorat93/titanic.git
            cd titanic 
            sudo docker-compose up -d --remove-orphans


        
  # push_to_registry:
  #   needs: flake8
  #   name: Push to Docker Hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       name: Checkout 
  #       uses: actions/checkout@v3 
  #     -
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USER}}
  #         password: ${{ secrets.DOCKER_PASSWORD}}
  #     - name: docker-compose build
  #       run: |
  #         docker-compose build 
  #     - name: docker push
  #       run: |
  #         docker-compose push 

  # send_compose:
  #   needs: push_to_registry
  #   name: Send docker-compose
  #   runs-on: ubuntu-latest
  #   environment: ${{github.ref_name}}
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Copy Docker Compose
  #     uses: appleboy/scp-action@master
  #     with:
  #       host: ${{ secrets.AWS_HOST}}
  #       username: ${{ secrets.SERVER_USER }}
  #       key: ${{ secrets.SERVER_KEY }}
  #       source: "docker-compose.yml"
  #       target: "titanic/"
