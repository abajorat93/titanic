# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ staging, main]
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout 
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push random forest
        uses: docker/build-push-action@v2
        with:
          context: ./random_forest
          file: ./random_forest/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USER}}/titanic_rf:${{ github.ref_name}}
      -
        name: Build and push log reg
        uses: docker/build-push-action@v2
        with:
          context: ./log_reg
          file: ./log_reg/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USER}}/titanic_lr:${{ github.ref_name}}

  send_compose:
    needs: push_to_registry
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.KEY }}
        source: "docker-compose.yml"
        target: "titanic/docker-compose.yml"
  deploy-prod:
    name: Deploy to production environment
    needs: send_compose
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    steps:
      - name: deploy docker to docker hub
        run: docker login 
      - name: executing ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST}}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd titanic
            sudo docker-compose build
            sudo docker-compose up -d
  deploy-staging:
    name: Deploy to staging environment
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'staging' }}
    steps:
      - name: executing ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST}}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            rm -rf titanic
            git clone git@github.com:abajorat93/titanic.git
            cd titanic
            sudo docker-compose build
            sudo docker-compose up -d