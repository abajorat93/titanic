# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [production, staging]
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout 
        uses: actions/checkout@v3 
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push random forest
        uses: docker/build-push-action@v2
        with:
          context: ./random_forest
          file: ./random_forest/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USER}}/titanic_rf:${{ github.ref_name}}
      -
        name: Build and push log reg
        uses: docker/build-push-action@v2
        with:
          context: ./log_reg
          file: ./log_reg/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USER}}/titanic_lr:${{ github.ref_name}}

  # send_compose:
  #   needs: push_to_registry
  #   name: Send docker-compose
  #   runs-on: ubuntu-latest
  #   environment: ${{github.ref_name}}
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: copy file via ssh password
  #     uses: appleboy/scp-action@master
  #     with:
  #       host: ${{ secrets.AWS_HOST}}
  #       username: ${{ secrets.SERVER_USER }}
  #       key: ${{ secrets.SERVER_KEY }}
  #       source: "docker-compose-${{github.ref_name}}.yml"
  #       target: "titanic/"

  deployment:
    name: Run docker compose
    # needs: send_compose
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name}}
    steps:
      - name: deploy docker to docker hub
        run: docker login 
      - name: executing ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST}}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY_NEW }}
          script: |
            cd titanic
            mkdir titanic_2
            # sudo docker-compose -f docker-compose-${{ github.ref_name}}.yml down
            # sudo docker-compose -f docker-compose-${{ github.ref_name}}.yml build
            # sudo docker-compose -f docker-compose-${{ github.ref_name}}.yml up -d --remove-orphans
